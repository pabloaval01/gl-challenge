Acquiring state lock. This may take a few moments...
[0m[1mmodule.vpc_nfw.module.vpc_endpoints.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.vpc_nfw.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.vpc_nfw.data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]: Reading...[0m[0m
[0m[1mmodule.vpc_nfw.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Reading...[0m[0m
[0m[1mmodule.vpc_nfw.module.vpc_endpoints.data.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mmodule.vpc_nfw.data.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mmodule.vpc_nfw.data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]: Read complete after 0s [id=2053943846][0m
[0m[1mmodule.vpc_nfw.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Read complete after 0s [id=1021377347][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.vpc_nfw.aws_cloudwatch_log_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "this" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = (known after apply)
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 365
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.vpc_nfw.aws_default_security_group.default[0m will be created
[0m  [32m+[0m[0m resource "aws_default_security_group" "default" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = (known after apply)
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.vpc_nfw.aws_eip.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-us-east-1a"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-us-east-1a"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m vpc                  = (known after apply)
    }

[1m  # module.vpc_nfw.aws_flow_log.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_flow_log" "this" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m iam_role_arn             = (known after apply)
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m log_destination          = (known after apply)
      [32m+[0m[0m log_destination_type     = "cloud-watch-logs"
      [32m+[0m[0m log_format               = (known after apply)
      [32m+[0m[0m log_group_name           = (known after apply)
      [32m+[0m[0m max_aggregation_interval = 600
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m traffic_type             = "ALL"
      [32m+[0m[0m vpc_id                   = (known after apply)
    }

[1m  # module.vpc_nfw.aws_iam_policy.flowlogs_policy[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "flowlogs_policy" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m attachment_count = (known after apply)
      [32m+[0m[0m description      = "Policy to allow vpc flow logs to forward logs to Cloudwatch"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = "vpc-nfw-flowlogs-cloudwatch-policy"
      [32m+[0m[0m name_prefix      = (known after apply)
      [32m+[0m[0m path             = "/"
      [32m+[0m[0m policy           = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "logs:PutLogEvents",
                          [32m+[0m[0m "logs:DescribeLogStreams",
                          [32m+[0m[0m "logs:DescribeLogGroups",
                          [32m+[0m[0m "logs:CreateLogStream",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                      [32m+[0m[0m Sid      = "AWSVPCFlowLogsPushToCloudWatch"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m policy_id        = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
    }

[1m  # module.vpc_nfw.aws_iam_role.flowlogs_role[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "flowlogs_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "vpc-flow-logs.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = "AWSVPCFlowLogsAssumeRole"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "vpc-nfw-flowlogs-cloudwatch-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.vpc_nfw.aws_iam_role_policy_attachment.flowlogs_policy[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "flowlogs_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m role       = "vpc-nfw-flowlogs-cloudwatch-role"
    }

[1m  # module.vpc_nfw.aws_internet_gateway.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "this" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc_nfw.aws_nat_gateway.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "this" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-us-east-1a"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-us-east-1a"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
    }

[1m  # module.vpc_nfw.aws_route.private_nat_gateway[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "private_nat_gateway" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
        }
    }

[1m  # module.vpc_nfw.aws_route.public_internet_gateway[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "public_internet_gateway" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m gateway_id             = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
        }
    }

[1m  # module.vpc_nfw.aws_route.public_internet_gateway[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "public_internet_gateway" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m gateway_id             = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
        }
    }

[1m  # module.vpc_nfw.aws_route_table.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-private"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-private"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_nfw.aws_route_table.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-public-us-east-1a-rtb"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-public-us-east-1a-rtb"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_nfw.aws_route_table.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-public-us-east-1b-rtb"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-public-us-east-1b-rtb"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_nfw.aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_nfw.aws_route_table_association.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_nfw.aws_route_table_association.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_nfw.aws_route_table_association.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_nfw.aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-private-a-us-east-1a"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-private-a-us-east-1a"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_nfw.aws_subnet.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-private-b-us-east-1b"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-private-b-us-east-1b"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_nfw.aws_subnet.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.0.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-public-us-east-1a"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-public-us-east-1a"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_nfw.aws_subnet.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-public-us-east-1b"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw-public-us-east-1b"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_nfw.aws_vpc.this[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m assign_generated_ipv6_cidr_block     = false
      [32m+[0m[0m cidr_block                           = "10.1.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "vpc-nfw"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/VPC"
          [32m+[0m[0m "Terraform"   = "True"
        }
    }

[1mPlan:[0m 24 to add, 0 to change, 0 to destroy.
[0m[0m[1m
Do you want to perform these actions?[0m
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0m
[0m[1mmodule.vpc_nfw.aws_iam_policy.flowlogs_policy[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_eip.nat[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_vpc.this: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_iam_role.flowlogs_role[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_iam_policy.flowlogs_policy[0]: Creation complete after 1s [id=arn:aws:iam::896239730436:policy/vpc-nfw-flowlogs-cloudwatch-policy][0m
[0m[1mmodule.vpc_nfw.aws_iam_role.flowlogs_role[0]: Creation complete after 1s [id=vpc-nfw-flowlogs-cloudwatch-role][0m
[0m[1mmodule.vpc_nfw.aws_iam_role_policy_attachment.flowlogs_policy[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_iam_role_policy_attachment.flowlogs_policy[0]: Creation complete after 0s [id=vpc-nfw-flowlogs-cloudwatch-role-20250730205859041400000001][0m
[0m[1mmodule.vpc_nfw.aws_eip.nat[0]: Creation complete after 1s [id=eipalloc-02018b29592daa66d][0m
[0m[1mmodule.vpc_nfw.aws_vpc.this: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_nfw.aws_vpc.this: Creation complete after 13s [id=vpc-05d7744ec3aade0cb][0m
[0m[1mmodule.vpc_nfw.aws_default_security_group.default: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_internet_gateway.this[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_subnet.public[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_route_table.public[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_cloudwatch_log_group.this[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_subnet.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_route_table.public[1]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_subnet.public[1]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_subnet.private[1]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_route_table.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_internet_gateway.this[0]: Creation complete after 1s [id=igw-0f95fff7fb4605d74][0m
[0m[1mmodule.vpc_nfw.aws_cloudwatch_log_group.this[0]: Creation complete after 1s [id=/aws/vpcflow/vpc-05d7744ec3aade0cb][0m
[0m[1mmodule.vpc_nfw.aws_flow_log.this[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_route_table.public[0]: Creation complete after 1s [id=rtb-0a00c43a13b0e4dd0][0m
[0m[1mmodule.vpc_nfw.aws_route_table.public[1]: Creation complete after 1s [id=rtb-0feae2b9321d2a7c9][0m
[0m[1mmodule.vpc_nfw.aws_route.public_internet_gateway[1]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_route.public_internet_gateway[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_subnet.private[1]: Creation complete after 2s [id=subnet-0ac2889d058fe9f7a][0m
[0m[1mmodule.vpc_nfw.aws_route_table.private[0]: Creation complete after 2s [id=rtb-0f4e2d2f0cc975ca0][0m
[0m[1mmodule.vpc_nfw.aws_flow_log.this[0]: Creation complete after 1s [id=fl-0c7e0885ddb51ec57][0m
[0m[1mmodule.vpc_nfw.aws_route.public_internet_gateway[0]: Creation complete after 2s [id=r-rtb-0a00c43a13b0e4dd01080289494][0m
[0m[1mmodule.vpc_nfw.aws_route.public_internet_gateway[1]: Creation complete after 2s [id=r-rtb-0feae2b9321d2a7c91080289494][0m
[0m[1mmodule.vpc_nfw.aws_default_security_group.default: Creation complete after 3s [id=sg-0f3eb487775bae832][0m
[0m[1mmodule.vpc_nfw.aws_subnet.private[0]: Creation complete after 4s [id=subnet-0dd4f28eb779df644][0m
[0m[1mmodule.vpc_nfw.aws_route_table_association.private[1]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_route_table_association.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_route_table_association.private[0]: Creation complete after 0s [id=rtbassoc-07baf526da9269c25][0m
[0m[1mmodule.vpc_nfw.aws_route_table_association.private[1]: Creation complete after 0s [id=rtbassoc-0e82c8a631f802937][0m
[0m[1mmodule.vpc_nfw.aws_subnet.public[0]: Still creating... [00m11s elapsed][0m[0m
[0m[1mmodule.vpc_nfw.aws_subnet.public[1]: Still creating... [00m11s elapsed][0m[0m
[0m[1mmodule.vpc_nfw.aws_subnet.public[0]: Creation complete after 16s [id=subnet-0e008ec820cb9485f][0m
[0m[1mmodule.vpc_nfw.aws_subnet.public[1]: Creation complete after 18s [id=subnet-05aa156cf6143c417][0m
[0m[1mmodule.vpc_nfw.aws_route_table_association.public[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_route_table_association.public[1]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_nat_gateway.this[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_route_table_association.public[1]: Creation complete after 0s [id=rtbassoc-07ddd03728601380e][0m
[0m[1mmodule.vpc_nfw.aws_route_table_association.public[0]: Creation complete after 0s [id=rtbassoc-008881c9fc1763dfc][0m
[0m[1mmodule.vpc_nfw.aws_nat_gateway.this[0]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_nfw.aws_nat_gateway.this[0]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_nfw.aws_nat_gateway.this[0]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_nfw.aws_nat_gateway.this[0]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_nfw.aws_nat_gateway.this[0]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.vpc_nfw.aws_nat_gateway.this[0]: Still creating... [01m01s elapsed][0m[0m
[0m[1mmodule.vpc_nfw.aws_nat_gateway.this[0]: Still creating... [01m11s elapsed][0m[0m
[0m[1mmodule.vpc_nfw.aws_nat_gateway.this[0]: Still creating... [01m21s elapsed][0m[0m
[0m[1mmodule.vpc_nfw.aws_nat_gateway.this[0]: Creation complete after 1m27s [id=nat-0485fa855000b6d58][0m
[0m[1mmodule.vpc_nfw.aws_route.private_nat_gateway[0]: Creating...[0m[0m
[0m[1mmodule.vpc_nfw.aws_route.private_nat_gateway[0]: Creation complete after 2s [id=r-rtb-0f4e2d2f0cc975ca01080289494][0m
[0m[1m[32m
Apply complete! Resources: 24 added, 0 changed, 0 destroyed.
[0m