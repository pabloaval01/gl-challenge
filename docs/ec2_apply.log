Acquiring state lock. This may take a few moments...
[0m[1mmodule.ec2_test.data.aws_iam_policy.AmazonSSMManagedInstanceCore: Reading...[0m[0m
[0m[1mdata.aws_kms_key.backend_key: Reading...[0m[0m
[0m[1mmodule.ec2_test.data.aws_ec2_instance_type.this: Reading...[0m[0m
[0m[1mdata.aws_vpc.vpc_nfw: Reading...[0m[0m
[0m[1mdata.aws_ami.redhat: Reading...[0m[0m
[0m[1mdata.aws_kms_key.backend_key: Read complete after 0s [id=48ef1072-efe4-4fc6-a69d-61807cb2f264][0m
[0m[1mmodule.ec2_test.data.aws_ec2_instance_type.this: Read complete after 0s [id=t2.micro][0m
[0m[1mdata.aws_ami.redhat: Read complete after 1s [id=ami-0a74a0465cdeea9b3][0m
[0m[1mdata.aws_vpc.vpc_nfw: Read complete after 1s [id=vpc-05d7744ec3aade0cb][0m
[0m[1mdata.aws_subnet.sub2: Reading...[0m[0m
[0m[1mdata.aws_subnet.sub2: Read complete after 0s [id=subnet-05aa156cf6143c417][0m
[0m[1mmodule.ec2_test.data.aws_iam_policy.AmazonSSMManagedInstanceCore: Read complete after 4s [id=arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_key_pair.ec2_redhat_key[0m will be created
[0m  [32m+[0m[0m resource "aws_key_pair" "ec2_redhat_key" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m fingerprint     = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m key_name        = "ec2-redhat-test-keypair"
      [32m+[0m[0m key_name_prefix = (known after apply)
      [32m+[0m[0m key_pair_id     = (known after apply)
      [32m+[0m[0m key_type        = (known after apply)
      [32m+[0m[0m public_key      = (known after apply)
      [32m+[0m[0m tags_all        = (known after apply)
    }

[1m  # local_file.private_key_pem[0m will be created
[0m  [32m+[0m[0m resource "local_file" "private_key_pem" {
      [32m+[0m[0m content              = (sensitive value)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0400"
      [32m+[0m[0m filename             = "./ec2-redhat-test-keypair.pem"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # tls_private_key.ssh_key[0m will be created
[0m  [32m+[0m[0m resource "tls_private_key" "ssh_key" {
      [32m+[0m[0m algorithm                     = "RSA"
      [32m+[0m[0m ecdsa_curve                   = "P224"
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m private_key_openssh           = (sensitive value)
      [32m+[0m[0m private_key_pem               = (sensitive value)
      [32m+[0m[0m private_key_pem_pkcs8         = (sensitive value)
      [32m+[0m[0m public_key_fingerprint_md5    = (known after apply)
      [32m+[0m[0m public_key_fingerprint_sha256 = (known after apply)
      [32m+[0m[0m public_key_openssh            = (known after apply)
      [32m+[0m[0m public_key_pem                = (known after apply)
      [32m+[0m[0m rsa_bits                      = 4096
    }

[1m  # module.ec2_test.aws_instance.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "this" {
      [32m+[0m[0m ami                                  = "ami-0a74a0465cdeea9b3"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = false
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = false
      [32m+[0m[0m enable_primary_ipv6                  = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "ec2-redhat-test-keypair"
      [32m+[0m[0m monitoring                           = true
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = "subnet-05aa156cf6143c417"
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "CNAME"       = "Challenge-GL"
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "Challenge-GL"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "PatchGroup"  = "1"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/EC2"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "CNAME"       = "Challenge-GL"
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "Challenge-GL"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "PatchGroup"  = "1"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/EC2"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m volume_tags                          = {
          [32m+[0m[0m "Environment" = "Demo"
          [32m+[0m[0m "Name"        = "Challenge-GL"
          [32m+[0m[0m "Owner"       = "Pablo Valentino"
          [32m+[0m[0m "Project"     = "GL Challenge"
          [32m+[0m[0m "Repository"  = "https://github.com/pabloaval01/gl-challenge/tree/main/EC2"
          [32m+[0m[0m "Terraform"   = "True"
        }
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)

      [32m+[0m[0m capacity_reservation_specification (known after apply)

      [32m+[0m[0m cpu_options (known after apply)

      [32m+[0m[0m ebs_block_device (known after apply)

      [32m+[0m[0m enclave_options (known after apply)

      [32m+[0m[0m ephemeral_block_device (known after apply)

      [32m+[0m[0m instance_market_options (known after apply)

      [32m+[0m[0m maintenance_options (known after apply)

      [32m+[0m[0m metadata_options {
          [32m+[0m[0m http_endpoint               = "enabled"
          [32m+[0m[0m http_protocol_ipv6          = "disabled"
          [32m+[0m[0m http_put_response_hop_limit = 1
          [32m+[0m[0m http_tokens                 = "required"
          [32m+[0m[0m instance_metadata_tags      = "enabled"
        }

      [32m+[0m[0m network_interface (known after apply)

      [32m+[0m[0m private_dns_name_options (known after apply)

      [32m+[0m[0m root_block_device {
          [32m+[0m[0m delete_on_termination = true
          [32m+[0m[0m device_name           = (known after apply)
          [32m+[0m[0m encrypted             = true
          [32m+[0m[0m iops                  = (known after apply)
          [32m+[0m[0m kms_key_id            = "arn:aws:kms:us-east-1:896239730436:key/48ef1072-efe4-4fc6-a69d-61807cb2f264"
          [32m+[0m[0m tags_all              = (known after apply)
          [32m+[0m[0m throughput            = (known after apply)
          [32m+[0m[0m volume_id             = (known after apply)
          [32m+[0m[0m volume_size           = 20
          [32m+[0m[0m volume_type           = "gp3"
        }
    }

[1m  # module.ec2_test.module.security_group[0].aws_security_group.this[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "Challenge-GL-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = "vpc-05d7744ec3aade0cb"
    }

[1m  # module.ec2_test.module.security_group[0].aws_vpc_security_group_egress_rule.this["allow_all_egress"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_egress_rule" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m description            = "Allow all egress"
      [32m+[0m[0m from_port              = 0
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 0
    }

[1m  # module.ec2_test.module.security_group[0].aws_vpc_security_group_ingress_rule.this["ssh"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "10.1.1.0/24"
      [32m+[0m[0m description            = "SSH access"
      [32m+[0m[0m from_port              = 22
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 22
    }

[1mPlan:[0m 7 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m private_key_path = "./ec2-redhat-test-keypair.pem"
[0m[1mtls_private_key.ssh_key: Creating...[0m[0m
[0m[1mmodule.ec2_test.module.security_group[0].aws_security_group.this: Creating...[0m[0m
[0m[1mtls_private_key.ssh_key: Creation complete after 2s [id=06f953e752d9346b8ab0de8c67429327a265c227][0m
[0m[1maws_key_pair.ec2_redhat_key: Creating...[0m[0m
[0m[1mlocal_file.private_key_pem: Creating...[0m[0m
[0m[1mlocal_file.private_key_pem: Creation complete after 0s [id=a590e9a3709a2c07c190facb6184eb0e5f22df4c][0m
[0m[1maws_key_pair.ec2_redhat_key: Creation complete after 1s [id=ec2-redhat-test-keypair][0m
[0m[1mmodule.ec2_test.module.security_group[0].aws_security_group.this: Creation complete after 3s [id=sg-0edce15ba8e137b45][0m
[0m[1mmodule.ec2_test.aws_instance.this[0]: Creating...[0m[0m
[0m[1mmodule.ec2_test.module.security_group[0].aws_vpc_security_group_egress_rule.this["allow_all_egress"]: Creating...[0m[0m
[0m[1mmodule.ec2_test.module.security_group[0].aws_vpc_security_group_ingress_rule.this["ssh"]: Creating...[0m[0m
[0m[1mmodule.ec2_test.module.security_group[0].aws_vpc_security_group_egress_rule.this["allow_all_egress"]: Creation complete after 0s [id=sgr-0d4fafc87616f7faf][0m
[0m[1mmodule.ec2_test.module.security_group[0].aws_vpc_security_group_ingress_rule.this["ssh"]: Creation complete after 1s [id=sgr-03e73c2a2409a11a8][0m
[0m[1mmodule.ec2_test.aws_instance.this[0]: Still creating... [00m11s elapsed][0m[0m
[0m[1mmodule.ec2_test.aws_instance.this[0]: Still creating... [00m21s elapsed][0m[0m
[0m[1mmodule.ec2_test.aws_instance.this[0]: Still creating... [00m31s elapsed][0m[0m
[0m[1mmodule.ec2_test.aws_instance.this[0]: Still creating... [00m42s elapsed][0m[0m
[0m[1mmodule.ec2_test.aws_instance.this[0]: Creation complete after 48s [id=i-012f4238cc4d123c7][0m
[0m[1m[32m
Apply complete! Resources: 7 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mprivate_key_path = "./ec2-redhat-test-keypair.pem"
